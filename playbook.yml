---
- hosts: local
  vars:
    drupal_deploy_dir: /var/www/drupalvm/drupal
    package_versions:
      - pacifica/pacifica:dev-9.x-1.x
      - pacifica/pacifica_theme:dev-9.x-1.x
      - pacifica/pacifica_profiles:dev-9.x-1.x-vcs
  pre_tasks:
    - name: Check SSHD Config
      slurp:
        src: /etc/ssh/sshd_config
      register: sshd_config_result
    - name: Add sftpgroup sshd config
      blockinfile:
        path: /etc/ssh/sshd_config
        validate: /usr/sbin/sshd -T -C user=root -f %s
        block: |
          # Pacifica SFTP Upload Group
          Match Group sftponly
            AuthorizedKeysFile /etc/ssh/keys/%u
            ChrootDirectory %h
            ForceCommand internal-sftp
            AllowTcpForwarding no
            PasswordAuthentication no
            X11Forwarding no
      when: "'Pacifica SFTP' not in (sshd_config_result.content | b64decode)"
    - name: Ensure FTP group
      group:
        name: sftponly
        state: present
    - name: Create directories
      file:
        state: directory
        path: "{{ item.path }}"
        owner: "{{ item.owner | default('root') }}"
        group: "{{ item.group | default('root') }}"
        mode: "{{ item.mode | default('0755') }}"
      loop:
        - path: /etc/ssh/keys
          group: sftponly
          mode: '0750'
        - path: /uploads
        - path: /srv/cartdata
        - path: /srv/ingestdata
        - path: /srv/archivedata
        - path: /srv/ingestdata/session
    - name: Verify Files Ownership
      file:
        state: directory
        path: /var/www/drupalvm/drupal/web/sites/default/files
        owner: root
        group: apache
        mode: 0770
    - name: Run Drush Cache Rebuild
      retries: 3
      delay: 3
      register: result
      until: (result.get('rc', -1) | int) == 0
      shell: drush cr
      args:
        chdir: /var/www/drupalvm/drupal
    - name: Make sure language packs are there
      package:
        name:
          - glibc-all-langpacks
          - glibc-langpack-en
        state: present
    - name: Make sure users can login
      file:
        src: /lib/systemd/system/systemd-user-sessions.service
        dest: /etc/systemd/system/multi-user.target.wants/systemd-user-sessions.service
        mode: '0644'
        owner: root
        group: root
        state: link
  roles:
    - role: pacifica.ansible_drupalsolr
    - role: pacifica.drupal_keycloak
      vars:
        drupal_deploy_dir: /var/www/drupalvm/drupal
        keycloak_redirect_uris:
          - https://localhost/*
          - https://localhost:8443/*
          - https://localhost:48443/*
          - http://localhost/*
          - http://localhost:8080/*
- name: Setup Pacifica Services
  hosts: local
  pre_tasks:
    - name: Get Keycloak Realm Public Key
      command:
        argv:
          - /usr/local/keycloak/bin/kcadm.sh
          - get
          - realms/master/keys
          - --server=https://localhost:8443/auth
          - --realm=master
          - --user=admin
          - --password=admin
      register: keycloak_master_realm_config
    - name: Get Keycloak Client
      command:
        argv:
          - /usr/local/keycloak/bin/kcadm.sh
          - get
          - clients
          - --server=https://localhost:8443/auth
          - --realm=master
          - --user=admin
          - --password=admin
          - --query
          - clientId=drupal-keycloak
      register: keycloak_client_config
    - name: Public Key Mapping Fact
      set_fact:
        public_key_type: "{{ item.type }}"
        public_key_value: "{% if 'publicKey' in item %}{{ item.publicKey }}{% endif %}"
      register: public_key_mapping
      loop: "{{ (keycloak_master_realm_config.stdout | from_json).get('keys') }}"
    - name: Set Keycloak Realm/Client Facts
      set_fact:
        master_realm_public_key: |
          {{
            (
              public_key_mapping.results |
              map(attribute='ansible_facts') |
              list |
              items2dict(key_name='public_key_type', value_name='public_key_value')
            ).get('RSA')
          }}
        client_uuid: "{{ (keycloak_client_config.stdout | from_json)[0].get('id') }}"
    - name: Get Keycloak Client Secret
      command:
        argv:
          - /usr/local/keycloak/bin/kcadm.sh
          - get
          - "clients/{{ client_uuid }}/client-secret"
          - --server=https://localhost:8443/auth
          - --realm=master
          - --user=admin
          - --password=admin
      register: keycloak_client_secret
    - name: Keycloak Client Secret Fact
      set_fact:
        client_secret: "{{ (keycloak_client_secret.stdout | from_json).value }}"
  roles:
    - role: pacifica.ansible_pacifica
      vars:
        __common_python: &__common_python
          aux_pkg:
            - uwsgi
            - pip
            - redis
            - amqp
            - pymysql
        __notify_config: &__notify_config
          <<: *__common_python
          ini_config:
            celery:
              broker_url: redis://127.0.0.1:6379/0
            database:
              peewee_url: mysql://notify:notify@127.0.0.1:3306/notify
        __cartd_config: &__cartd_config
          <<: *__common_python
          env_vars:
            VOLUME_PATH: /srv/cartdata
            CARTD_CONFIG: /opt/default/cartd_frontend.ini
            CARTD_CPCONFIG: /opt/default/cartd_frontend-cp.ini
          ini_config:
            celery:
              broker_url: redis://127.0.0.1:6379/1
            database:
              peewee_url: mysql://cartd:cartd@127.0.0.1:3306/cartd
        __ingest_config: &__ingest_config
          <<: *__common_python
          pip_module: git+https://github.com/dmlb2000/pacifica-ingest.git@major-refactor#egg=pacifica-ingest
          override_exec: pacifica-ingest
          env_vars:
            CONFIG_FILE: /opt/default/ingest_frontend.ini
            REQUESTS_CA_BUNDLE: /etc/pki/tls/certs/ca-bundle.crt
            BROKER_URL: redis://127.0.0.1:6379/2
          ini_config:
            cherrypy:
              port: '48443'
              host: '0.0.0.0'
              app_dir: /opt/session-app
              ssl_private_key: /etc/pki/tls/private/localhost.localdomain.pem
              ssl_certificate: /etc/pki/tls/certs/localhost.localdomain.crt
              ssl_certificate_chain: /etc/pki/tls/certs/pacifica_chain.io.crt
              social_module: keycloak
              social_class: KeycloakOAuth2
            social_settings:
              keycloak_key: drupal-keycloak
              keycloak_secret: "{{ client_secret }}"
              keycloak_authorization_url: https://localhost:8443/auth/realms/master/protocol/openid-connect/auth
              keycloak_access_token_url: https://localhost:8443/auth/realms/master/protocol/openid-connect/token
              keycloak_public_key: "{{ master_realm_public_key }}"
            ingest:
              upload_path: /srv/ingestdata/upload
              move_path: /srv/ingestdata/move
              session_path: /srv/ingestdata/session
            database:
              db_url: mysql+pymysql://ingest:ingest@127.0.0.1:3306/ingest
        pacifica_available_services:
          archiveinterface:
            <<: *__common_python
            processes: 4
            socket_port: "48080"
            env_vars:
              PAI_PREFIX: /srv/archivedata
              ARCHIVEINTERFACE_CONFIG: /opt/default/archiveinterface.ini
              ARCHIVEINTERFACE_CPCONFIG: /opt/default/archiveinterface-cp.ini
          uniqueid:
            <<: *__common_python
            ini_config:
              database:
                peewee_url: mysql://uniqueid:uniqueid@127.0.0.1:3306/uniqueid
          notify_backend: *__notify_config
          notify_frontend: *__notify_config
          ingest_backend: *__ingest_config
          ingest_frontend: *__ingest_config
          cartd_backend: *__cartd_config
          cartd_frontend: *__cartd_config
